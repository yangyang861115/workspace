package easy;

/*
 * You are a professional robber planning to rob houses along a street. 
 * Each house has a certain amount of money stashed, 
 * the only constraint stopping you from robbing each of them is 
 * that adjacent houses have security system connected and it will 
 * automatically contact the police if two adjacent houses were broken 
 * into on the same night.
 * Given a list of non-negative integers representing the amount of 
 * money of each house, determine the maximum amount of money you can 
 * rob tonight without alerting the police.
 * 
 * */
public class HouseRobber {
    public int rob(int[] nums) {
        int n = nums.length;
        if (n == 0)
            return 0;
        if (n == 1)
            return nums[0];

        int[] money = new int[n];
        for (int i = 0; i < n; i++) {
            money[i] = 0;
        }
        ;
        money[0] = nums[0];
        money[1] = Math.max(money[0], nums[1]);
        int max = Math.max(money[0], money[1]);
        for (int i = 2; i < n; i++) {
            money[i] = Math.max(nums[i] + money[i - 2], money[i - 1]);
            if (money[i] > max)
                max = money[i];
        }
        return max;

    }

    public static void main(String[] args) {
        // TODO Auto-generated method stub
        HouseRobber hr = new HouseRobber();
        System.out.println(hr.rob(new int[] { 1, 2, 2, 1 }));
    }

}
